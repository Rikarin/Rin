namespace System;

alias TODO = assert(false, "TODO");

// Basic types
alias string  = readonly(char)[];
alias wstring = readonly(wchar)[];
alias dstring = readonly(dchar)[];
alias object  = Object;

alias Action       = delegate();
alias Predicate(T) = delegate(T) -> bool;


class Object {
    virtual toString() const -> string => typeid(self).name;
    virtual getHash() const -> size_t => 0;

    type -> const(Type) => typeid(self);

    virtual finalize() {

    }

    // TODO: operators
}


equals(lhs: object, rhs: object) -> bool {
    if (lhs is null && rhs is null) {
        return true;
    }

    TODO;
}
