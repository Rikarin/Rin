namespace System;

// Basic types
alias string  = readonly(char)[];
alias wstring = readonly(wchar)[];
alias dstring = readonly(dchar)[];
alias object  = Object;

alias Action       = () -> void;
alias Predicate(T) = (T) -> bool;


class Object {
    toString() const -> string => typeid(self).name;
    getHash() const -> size_t => 0;

    final type -> const(Type) => typeid(self);

    finalize() {

    }

    // TODO: operators
}


equals(lhs: object, rhs: object) -> bool {
    if (lhs is null && rhs is null) {
        return true;
    }

    throw new NotImplementedException();
}
